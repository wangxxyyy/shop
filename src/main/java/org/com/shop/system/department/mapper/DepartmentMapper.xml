<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.com.shop.system.department.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="org.com.shop.system.department.model.Department" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result property="FLD_DATE" column="FLD_DATE" javaType="java.sql.Date" jdbcType="DATE"/>
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="sorts" property="sorts" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <collection column="id" property="children" select="getChildren"/> 
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, create_date, number, create_user_id, sorts, state, parent_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from department
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.com.shop.system.department.model.Department" >
    insert into department (id, name, create_date, 
      number, create_user_id, sorts, 
      state, parent_id)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{number,jdbcType=INTEGER}, #{createUserId,jdbcType=VARCHAR}, #{sorts,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{parentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.com.shop.system.department.model.Department" >
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="sorts != null" >
        sorts,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="sorts != null" >
        #{sorts,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.com.shop.system.department.model.Department" >
    update department
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="sorts != null" >
        sorts = #{sorts,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.com.shop.system.department.model.Department" >
    update department
    set name = #{name,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      sorts = #{sorts,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="getList" parameterType="org.com.shop.system.department.model.Department" resultMap="BaseResultMap">
	 select <include refid="Base_Column_List" /> 
	 from department
	 where parent_id is null
 	 <if test="name != null and name !=''">
 	  and name = #{name,jdbcType=VARCHAR}
 	 </if>
 	 <if test="number != null and number !=''">
 	  and number = #{number,jdbcType=VARCHAR}
 	 </if>
 	    limit  #{start,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}
  </select>
  
  <select id="getChildren" resultMap="BaseResultMap">  
        select <include refid="Base_Column_List" /> 
        from department 
        where parent_id = #{id}  
  </select> 
  
  <select id="getListCount" parameterType="org.com.shop.system.user.model.User" resultType="java.lang.Integer">
	 select count(*)
	 from department
	 <where>
	  <if test="name != null" >
          and name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
          and number = #{number,jdbcType=VARCHAR},
      </if>  
	 </where>
  </select> 
  
</mapper>